conectar con showdown:
https://chatgpt.com/c/681b91e5-4490-8005-b1fb-b7a03e726f3d

bracket torneo:
https://chatgpt.com/c/682b9cd3-1890-8005-93a7-496ee4d9b5ad

documentacion:
https://chatgpt.com/c/681102d5-6fbc-8005-9294-96d9cd6cc66a

middleware:
https://chatgpt.com/c/6834f561-551c-8005-951d-192488480fa4

bot torneos:
https://chatgpt.com/c/682daa1a-96d8-8005-a5a5-f88e8fd2e5fd

TODO:
- testear y si no va con ifs middleware isAdminOrOrganizer para las paginas de torneos y eso
- controlador usuarios y index
- Comprobar errores create equipos
- 1. mostrar en el calendario los torneos creados y mejorar view crear torneos
- 2. back y front inscribirse a torneos
- 3. tema de que hace el organizador en el torneo y torneos en general


2. (index de usuarios, que tenga un boton para hacerlos organizadores con comprobación extra)
Organizador inicia sesion y crea un torneo en un dia
(
    view{
        pagina de calendario y formulario
    }
    back{
        controlador de torneos
        controlador de calendario
    }
)
4. Usuarios se inscriben al torneo 
(
    back {
        controlador de inscripciones
    }
)
5. Organizador entra al torneo por si acaso
(
    view {
        pagina torneo
    }
    back {
        scripts de los brackets
    }
)
6. Usuarios entran al torneo para jugar
(
    view{
        tema teamsheets del rival y eso
    }
    back {
        metodos internos del torneo
        conexiones con showdown
        bot para las salas
    }
)
Juegan el torneo
Jugador gana
Organizador lo declara ganador
Jugador mira estadisticas
(
    view{
        pagina estadisticas
    }
    back{
        controlador estadisticas
    }
)
Jugador ve que ha ganado en sus estadisticas
---------------------------------------------------
1. Administrador inicia sesion y hace organizador a un usuario
(
    back{
        crear una variable de sesion con el rol del usuario en http controllers auth quizas 
        auth()->user()->es_organizador
        auth()->user()->es_administrador
    }
)
2. (index de usuarios, que tenga un boton para hacerlos organizadores con comprobación extra)
Organizador inicia sesion y crea un torneo en un dia
(
    view{
        pagina de calendario y formulario
    }
    back{
        controlador de torneos
        controlador de calendario
    }
)
3. Usuarios crean sus equipos pokemon
(
    view{
        conectar back con front
    }
)
4. Usuarios se inscriben al torneo 
(
    back {
        controlador de inscripciones
    }
)
5. Organizador entra al torneo por si acaso
(
    view {
        pagina torneo
    }
    back {
        scripts de los brackets
    }
)
6. Usuarios entran al torneo para jugar
(
    view{
        tema teamsheets del rival y eso
    }
    back {
        metodos internos del torneo
        conexiones con showdown
        bot para las salas
    }
)
Juegan el torneo
Jugador gana
Organizador lo declara ganador
Jugador mira estadisticas
(
    view{
        pagina estadisticas
    }
    back{
        controlador estadisticas
    }
)
Jugador ve que ha ganado en sus estadisticas